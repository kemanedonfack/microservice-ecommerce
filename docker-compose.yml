version: '3'
services:

  api-gateway:
    container_name: api-gateway
    build: ./ecommerce-api-gateway
    restart: always
    ports:
      - 8082:8082
    networks:
      - my-network
    environment:
      CONFIG_SERVER: http://
      ENV: prod

  config-server:
    container_name: config-server
    build: ./ecommerce-config-server
    restart: always
    ports:
      - 8090:8090
    networks:
      - my-network
 
  order-service:
    container_name: order-service
    build: ./ecommerce-order-service
    restart: always
    ports:
      - 8086:8086
    networks:
      - my-network
    environment:
      CONFIG_SERVER: http://
      ENV: prod
      
  product-service:
    container_name: product-service
    build: ./ecommerce-product-service
    restart: always
    ports:
      - 8083:8083
    networks:
      - my-network
    environment:
      CONFIG_SERVER: http://
      ENV: prod
      
  sale-service:
    container_name: sale-service
    build: ./ecommerce-sale-service
    restart: always
    ports:
      - 8085:8085
    networks:
      - my-network
    environment:
      CONFIG_SERVER: http://
      ENV: prod

  registry-service:
    container_name: registry-service
    build: ./ecommerce-service-registry
    restart: always
    ports:
      - 8081:8081
    networks:
      - my-network
    environment:
      SERVICE_REGISTRY: http://
      
  user-service:
    container_name: user-service
    build: ./ecommerce-user-service
    restart: always
    ports:
      - 8084:8084
    networks:
      - my-network
    environment:
      CONFIG_SERVER: http://
      ENV: prod

  mysqldb:
    image: mysql:5.7
    ports:
     - 3306:3306
    networks:
      - my-network
    environment:
      MYSQL_PASSWORD: kemane
      MYSQL_ROOT_PASSWORD: kemane
      MYSQL_DATABASE: db_zencaisse
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
     
networks:
  my-network:
    driver: bridge
 
